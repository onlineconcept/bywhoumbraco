// <auto-generated />
using System;
using DataLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20190530173605_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Models.CartLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid?>("CustomerId");

                    b.Property<decimal>("Price");

                    b.Property<int?>("SizeId");

                    b.Property<Guid?>("StyleId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.ToTable("CartLines");
                });

            modelBuilder.Entity("DataLayer.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<bool>("Guest");

                    b.Property<string>("HouseNo");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("Updated");

                    b.Property<string>("Zipcode");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DataLayer.Models.DiscountCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<DateTime?>("EndTime");

                    b.Property<bool>("IsPercentage");

                    b.Property<DateTime?>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("DiscountCodes");
                });

            modelBuilder.Entity("DataLayer.Models.Giftcard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<string>("GiftCardCode");

                    b.Property<Guid?>("PuchasedWithOrderId");

                    b.Property<DateTime>("ValidTo");

                    b.HasKey("Id");

                    b.HasIndex("PuchasedWithOrderId");

                    b.ToTable("Giftcards");
                });

            modelBuilder.Entity("DataLayer.Models.GiftcardUsageHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<Guid?>("GiftcardId");

                    b.Property<decimal>("UsedValue");

                    b.Property<Guid?>("UsedWithOrderId");

                    b.HasKey("Id");

                    b.HasIndex("GiftcardId");

                    b.HasIndex("UsedWithOrderId");

                    b.ToTable("GiftCardUsageHistories");
                });

            modelBuilder.Entity("DataLayer.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Created");

                    b.Property<decimal>("DiscountAmount");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<decimal>("GiftAmount");

                    b.Property<string>("HusNo");

                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("OrderSubTotalTaxEXCL");

                    b.Property<decimal>("OrderSubTotalTaxINCL");

                    b.Property<decimal>("OrderTotalTaxEXCL");

                    b.Property<decimal>("OrderTotalTaxINCL");

                    b.Property<string>("Phone");

                    b.Property<decimal>("Shipping");

                    b.Property<string>("Zipcode");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DataLayer.Models.OrderLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<DateTime>("Created");

                    b.Property<Guid?>("OrderId");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("Style");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("DataLayer.Models.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CartLineId");

                    b.Property<Guid?>("OrderLineId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("CartLineId");

                    b.HasIndex("OrderLineId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("DataLayer.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Height");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("SizeType");

                    b.Property<decimal>("Width");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("DataLayer.Models.Style", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountOfPictures");

                    b.Property<decimal>("B2BPrice");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal>("OldPrice");

                    b.Property<string>("Picture");

                    b.Property<decimal>("Price");

                    b.Property<bool>("Published");

                    b.HasKey("Id");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("DataLayer.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BodyTekst");

                    b.Property<bool>("IsPage");

                    b.Property<bool>("NoFollow");

                    b.Property<string>("SeoDescription");

                    b.Property<string>("SeoKeywords");

                    b.Property<string>("SeoTitle");

                    b.Property<string>("SystemName");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("DataLayer.Models.CartLine", b =>
                {
                    b.HasOne("DataLayer.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("DataLayer.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.HasOne("DataLayer.Models.Style", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId");
                });

            modelBuilder.Entity("DataLayer.Models.Giftcard", b =>
                {
                    b.HasOne("DataLayer.Models.Order", "PuchasedWithOrder")
                        .WithMany()
                        .HasForeignKey("PuchasedWithOrderId");
                });

            modelBuilder.Entity("DataLayer.Models.GiftcardUsageHistory", b =>
                {
                    b.HasOne("DataLayer.Models.Giftcard", "Giftcard")
                        .WithMany()
                        .HasForeignKey("GiftcardId");

                    b.HasOne("DataLayer.Models.Order", "UsedWithOrder")
                        .WithMany()
                        .HasForeignKey("UsedWithOrderId");
                });

            modelBuilder.Entity("DataLayer.Models.OrderLine", b =>
                {
                    b.HasOne("DataLayer.Models.Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("DataLayer.Models.Picture", b =>
                {
                    b.HasOne("DataLayer.Models.CartLine")
                        .WithMany("Pictures")
                        .HasForeignKey("CartLineId");

                    b.HasOne("DataLayer.Models.OrderLine")
                        .WithMany("Pictures")
                        .HasForeignKey("OrderLineId");
                });
#pragma warning restore 612, 618
        }
    }
}
